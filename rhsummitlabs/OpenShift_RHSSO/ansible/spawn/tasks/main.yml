---
# tasks file for save
#
- name: find the class ami
  ec2_ami_find:
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    region: "{{ instance_region }}"
    owner: self
    ami_tags:
      TrackingTag: "{{ tracking_tag }}"
  register: templateami
  tags: spawntemplateami
  when: cloud_vendor == "aws"

- name: launch class instances
  ec2:
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    group: "{{ security_group }}"
    image: "{{ templateami.results[0].ami_id }}"
    key_name: "{{ ssh_key }}"
    instance_type: "{{ instance_type }}"
    region: "{{ instance_region }}"
    wait: yes
    count_tag:
        TrackingTag: "{{ class_tag }}"
    instance_tags:
        TrackingTag: "{{ class_tag }}"
    exact_count: "{{ class_count }}"
  register: ec2
  when: cloud_vendor == "aws"
  tags: spawninstance

- name: find the ips of the instances
  ec2_instance_facts:
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    region: "{{ instance_region }}"
    filters:
      instance-state-name: running
      "tag:TrackingTag": "{{ class_tag }}"
  register: classinstances
  tags: classinventory
  when: cloud_vendor == "aws"

- name: remove ips file
  shell: rm -f /tmp/ips
  ignore_errors: True
  tags: ipfile

- name: save instace ips to file
  shell: echo "{{ item.public_ip_address }}" >> /tmp/ips
  with_items: "{{ classinstances.instances }}"
  tags: ipfile
  
- name: print the ip list filename
  debug:
      msg: "ips of the class instances are in /tmp/ips"
  tags: ipfile


